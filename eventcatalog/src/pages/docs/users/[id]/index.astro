---
import components from '@components/MDX/components';

// SideBars
import type { CollectionEntry } from 'astro:content';
import OwnersList from '@components/Lists/OwnersList';
import PillListFlat from '@components/Lists/PillListFlat';
import { getUsers } from '@utils/users';
import EnvelopeIcon from '@heroicons/react/16/solid/EnvelopeIcon';
import { buildUrl } from '@utils/url-builder';
import VerticalSideBarLayout from '@layouts/VerticalSideBarLayout.astro';

export async function getStaticPaths() {
  const teams = await getUsers();

  return teams.map((team) => ({
    params: {
      type: team.collection,
      id: team.data.id,
    },
    props: {
      type: 'team',
      ...team,
    },
  }));
}

const { render, ...props } = Astro.props;

const { Content } = await render();

const domains = props.data.ownedDomains as CollectionEntry<'domains'>[];
const services = props.data.ownedServices as CollectionEntry<'services'>[];
const events = props.data.ownedEvents as CollectionEntry<'events'>[];
const commands = props.data.ownedCommands as CollectionEntry<'commands'>[];
const teams = props.data.associatedTeams as CollectionEntry<'teams'>[];

const ownedDomainsList = domains.map((p) => ({
  label: `${p.data.name}`,
  href: buildUrl(`/docs/${p.collection}/${p.data.id}/${p.data.version}`),
  collection: p.collection,
  tag: `v${p.data.version}`,
}));

const ownedServicesList = services.map((p) => ({
  label: `${p.data.name}`,
  href: buildUrl(`/docs/${p.collection}/${p.data.id}/${p.data.version}`),
  collection: p.collection,
  tag: `v${p.data.version}`,
}));

const ownedMessageList = [...events, ...commands].map((p) => ({
  label: `${p.data.name}`,
  badge: p.collection,
  color: p.collection === 'events' ? 'orange' : 'blue',
  collection: p.collection,
  tag: `v${p.data.version}`,
  href: buildUrl(`/docs/${p.collection}/${p.data.id}/${p.data.version}`),
}));

const associatedTeams = teams.map((o) => ({
  label: o.data.name,
  type: o.collection,
  badge: 'Team',
  href: buildUrl(`/docs/${o.collection}/${o.data.id}`),
}));
---

<VerticalSideBarLayout title={`User | ${props.data.name}`}>
  <main class="flex sm:px-8 docs-layout h-full">
    <div class="flex docs-layout w-full">
      <div class="w-full lg:mr-6 pr-8 overflow-y-auto py-4">
        <!-- <span class="text-purple-500 bg-purple-100 px-2 py-1 rounded-md">v{props.data.version}</span> -->
        <div class="border-b border-gray-200 pb-4 py-4">
          <div class="flex justify-start space-x-8">
            <img src={props.data.avatarUrl} alt="Profile picture" class="shadow-md w-28 rounded-md" />
            <div class="flex flex-col justify-between">
              <div>
                <h2 class="text-4xl font-bold">{props.data.name}</h2>
                <span class="text-xl font-bold text-gray-500">{props.data.role}</span>
              </div>
              <div class="space-y-1">
                {
                  props.data.email && (
                    <div class="flex space-x-1 items-center text-xs text-gray-500 font-bold hover:underline hover:text-primary">
                      <EnvelopeIcon className="w-4 h-4 text-purple-400" />
                      <a href={`mailto:${props.data.email}`}>Email</a>
                    </div>
                  )
                }
                {
                  props.data.slackDirectMessageUrl && (
                    <div class="flex space-x-1 items-center text-xs text-gray-500 font-bold hover:underline hover:text-primary">
                      <img src="/slack-icon.svg" class="w-4 h-3" />
                      <a href={`${props.data.slackDirectMessageUrl}`}>Send DM on Slack</a>
                    </div>
                  )
                }
                {
                  props.data.msTeamsDirectMessageUrl && (
                    <div class="flex space-x-1 items-center text-xs text-gray-500 font-bold hover:underline hover:text-primary">
                      <img src="/icons/ms-teams.svg" class="w-4 h-4" />
                      <a href={`${props.data.msTeamsDirectMessageUrl}`} target="_blank" rel="noopener noreferrer">
                        Send DM on Teams
                      </a>
                    </div>
                  )
                }
              </div>
            </div>
          </div>
        </div>
        <div class="border-b border-gray-200">
          <div class="mx-auto max-w-7xl px-6 lg:px-8">
            <div class="mx-auto max-w-2xl lg:max-w-none">
              <dl
                class="hidden lg:grid grid-cols-1 gap-0.5 overflow-hidden rounded-2xl text-center sm:grid-cols-4 lg:grid-cols-4"
              >
                <div class="flex flex-col p-8">
                  <dt class="text-sm font-semibold leading-6 text-gray-600"># owned domains</dt>
                  <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{ownedDomainsList.length}</dd>
                </div>
                <div class="flex flex-col p-8">
                  <dt class="text-sm font-semibold leading-6 text-gray-600"># owned services</dt>
                  <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{ownedServicesList.length}</dd>
                </div>
                <div class="flex flex-col p-8">
                  <dt class="text-sm font-semibold leading-6 text-gray-600"># owned messages</dt>
                  <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{ownedMessageList.length}</dd>
                </div>
                <!-- <div class="flex flex-col  p-8">
                <dt class="text-sm font-semibold leading-6 text-gray-600"># owned domains</dt>
                <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">2</dd>
              </div> -->
                <div class="flex flex-col p-8">
                  <dt class="text-sm font-semibold leading-6 text-gray-600"># teams joined</dt>
                  <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{associatedTeams.length}</dd>
                </div>
              </dl>
            </div>
          </div>
        </div>
        <div class="prose prose-md py-4 w-full">
          <Content components={components(props)} />
        </div>
      </div>
      <aside class="hidden lg:block sticky top-0 h-[calc(100vh-theme(spacing.16))] w-72 overflow-y-auto py-2">
        <div class="divide-y-2 divide-gray-100 pr-6">
          {
            ownedDomainsList.length > 0 && (
              <PillListFlat
                color="pink"
                title={`Owned domains (${ownedDomainsList.length})`}
                pills={ownedDomainsList}
                emptyMessage={`${props.data.name} does not own any domains.`}
                client:load
              />
            )
          }
          {
            ownedServicesList.length > 0 && (
              <PillListFlat
                color="pink"
                title={`Owned services (${ownedServicesList.length})`}
                pills={ownedServicesList}
                emptyMessage={`${props.data.name} does not own any services.`}
                client:load
              />
            )
          }
          {
            ownedMessageList.length > 0 && (
              <PillListFlat
                color="orange"
                title={`Owned messages (${ownedMessageList.length})`}
                pills={ownedMessageList}
                emptyMessage={`${props.data.name} does not own any messages.`}
                client:load
              />
            )
          }
          {
            associatedTeams.length > 0 && (
              <OwnersList
                title={`Member of team (${associatedTeams.length})`}
                owners={associatedTeams}
                emptyMessage={`${props.data.name} is not part of any documented team.`}
                client:load
              />
            )
          }
        </div>
      </aside>
    </div>
  </main>
</VerticalSideBarLayout>

<style>
  .docs-layout .prose {
    max-width: none;
    overflow: auto;
  }
</style>
