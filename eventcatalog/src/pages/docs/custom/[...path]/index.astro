---
import CustomDocumentationPage from '@enterprise/custom-documentation/pages/index.astro';
import { getCollection } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import { isEventCatalogProEnabled } from '@utils/feature';
import path from 'node:path';
import fs from 'node:fs';

const PROJECT_DIR = path.resolve(process.env.PROJECT_DIR || process.cwd());
const CUSTOM_DOCS_DIR = path.resolve(PROJECT_DIR, 'docs/');
const directoryExists = fs.existsSync(CUSTOM_DOCS_DIR);

export const getStaticPaths = (async () => {
  const docs = await getCollection('customPages');
  const paths = docs.map((doc) => ({
    params: { path: doc.id.replace('docs/', '') },
    props: doc,
  }));
  return paths;
}) satisfies GetStaticPaths;

const props = Astro.props;

// Redirect
if (!directoryExists || !isEventCatalogProEnabled()) {
  Astro.redirect('/docs/custom');
}
---

<CustomDocumentationPage {...props} />
