---
// src/components/SchemaViewer.astro
import SchemaProperty from './SchemaProperty.astro';

interface Props {
  schema: Record<string, any>;
  schemaPath: string;
  title: string;
  maxHeight: string;
  file: string;
  id: string;
}

const { id, file, title, maxHeight, schema } = Astro.props;
const { description, properties, required = [] } = schema;
---

<div id={`${id}-${file}-SchemaViewer-client`} class="not-prose my-4">
  {title && <h2 class="text-3xl font-bold mb-2 !mt-0">{title}</h2>}
  <div
    class="schema-viewer p-4 bg-white overflow-y-auto rounded-lg border border-gray-100 shadow-sm font-sans"
    style={{
      maxHeight: maxHeight ? `${maxHeight}em` : `100em`,
    }}
  >
    {description && <p class="text-gray-600 text-xs mb-5">{description}</p>}
    {/* Reduced size, adjusted margin */}

    {
      properties &&
        Object.entries(properties).map(([name, details]) => (
          <SchemaProperty name={name} details={details} isRequired={required.includes(name)} level={0} />
        ))
    }

    {!properties && <p class="text-gray-500 text-sm">Schema does not contain any properties.</p>}
  </div>
</div>

<style>
  .schema-viewer code {
    font-family: 'Courier New', Courier, monospace;
  }
</style>
