---
import NodeGraph from '@components/MDX/NodeGraph/NodeGraph.astro';
import VisualiserLayout from '@layouts/VisualiserLayout.astro';
import type { PageTypes } from '@types';
import { getFlows } from '@utils/collections/flows';
import { buildUrl } from '@utils/url-builder';

import { pageDataLoader } from '@utils/page-loaders/page-data-loader';
import { ViewTransitions } from 'astro:transitions';
type PageTypesWithFlows = PageTypes | 'flows';

export async function getStaticPaths() {
  const loaders = {
    ...pageDataLoader,
    flows: getFlows,
  };

  const itemTypes: PageTypesWithFlows[] = ['events', 'commands', 'queries', 'services', 'domains', 'flows'];
  const allItems = await Promise.all(itemTypes.map((type) => loaders[type]()));

  return allItems.flatMap((items, index) =>
    items.map((item) => ({
      params: {
        type: itemTypes[index],
        id: item.data.id,
        version: item.data.version,
      },
      props: {
        type: itemTypes[index],
        ...item,
      },
    }))
  );
}

const props = Astro.props;

const {
  data: { id },
  collection,
} = props;
---

<VisualiserLayout title={`Visualiser | ${props.data.name} (${props.collection})`} description={props.data.summary}>
  <div class="bg-gray-100/50 m-4">
    <div class="h-[calc(100vh-110px)] w-full relative border border-gray-200" id={`${id}-portal`} transition:animate="fade"></div>
    <NodeGraph
      id={id}
      collection={collection}
      title={`${props.data.name} (v${props.data.version})`}
      mode="full"
      linkTo="visualiser"
      version={props.data.version}
      linksToVisualiser={false}
      href={{
        label: `Open documentation for ${props.data.name} v${props.data.version}`,
        url: buildUrl(`/docs/${props.collection}/${props.data.id}/${props.data.version}`),
      }}
    />
  </div>
  <ViewTransitions />
</VisualiserLayout>

<script define:vars={{ id }}>
  document.addEventListener('DOMContentLoaded', () => {
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    const embeded = params.embed === 'true' ? true : false;
    const viewport = document.getElementById(`${id}-portal`);

    if (embeded) {
      viewport.style.height = 'calc(100vh - 30px)';
    }
  });
</script>
