---
import DocsLayout from '@layouts/DocsLayout.astro';
import components from '@components/MDX/components';

// SideBars
import type { CollectionEntry } from 'astro:content';
import OwnersList from '@components/Lists/OwnersList';
import PillList from '@components/Lists/PillList';
import { getUsers } from '@utils/users';
import EnvelopeIcon from '@heroicons/react/16/solid/EnvelopeIcon';
import { buildUrl } from '@utils/url-builder';

export async function getStaticPaths() {
  const teams = await getUsers();

  return teams.map((team) => ({
    params: {
      type: team.collection,
      id: team.data.id,
    },
    props: {
      type: 'team',
      ...team,
    },
  }));
}

const { render, ...props } = Astro.props;

const { Content } = await render();

const services = props.data.ownedServices as CollectionEntry<'services'>[];
const events = props.data.ownedEvents as CollectionEntry<'events'>[];
const commands = props.data.ownedCommands as CollectionEntry<'commands'>[];
const teams = props.data.associatedTeams as CollectionEntry<'teams'>[];

const ownedServicesList = services.map((p) => ({
  label: `${p.data.name} (service)`,
  href: buildUrl(`/docs/${p.collection}/${p.data.id}/${p.data.version}`),
  tag: `v${p.data.version}`,
}));

const ownedMessageList = [...events, ...commands].map((p) => ({
  label: `${p.data.name} (${p.collection.slice(0, -1)})`,
  color: p.collection === 'events' ? 'orange' : 'blue',
  tag: `v${p.data.version}`,
  href: buildUrl(`/docs/${p.collection}/${p.data.id}/${p.data.version}`),
}));

const associatedTeams = teams.map((o) => ({
  label: o.data.name,
  type: o.collection,
  badge: 'Team',
  href: buildUrl(`/docs/${o.collection}/${o.data.id}`),
}));
---

<DocsLayout title={`User | ${props.data.name}`}>
  <div class="flex min-h-screen docs-layout">
    <main class="flex-1 w-full pr-10 pt-4">
      <!-- <span class="text-purple-500 bg-purple-100 px-2 py-1 rounded-md">v{props.data.version}</span> -->
      <div class="border-b border-gray-200 pb-4 py-4">
        <div class="flex justify-start space-x-8">
          <img src={props.data.avatarUrl} alt="Profile picture" class="shadow-md w-28 rounded-md" />
          <div class="flex flex-col justify-between">
            <div>
              <h2 class="text-4xl font-bold">{props.data.name}</h2>
              <span class="text-xl font-bold text-gray-500">{props.data.role}</span>
            </div>
            <div class="space-y-1">
              {
                props.data.email && (
                  <div class="flex space-x-1 items-center text-xs text-gray-500 font-bold hover:underline hover:text-purple-500">
                    <EnvelopeIcon className="w-4 h-4 text-purple-400" />
                    <a href={`mailto:${props.data.email}`}>Email</a>
                  </div>
                )
              }
              {
                props.data.slackDirectMessageUrl && (
                  <div class="flex space-x-1 items-center text-xs text-gray-500 font-bold hover:underline hover:text-purple-500">
                    <img src="/slack-icon.svg" class="w-4 h-3" />
                    <a href={`${props.data.slackDirectMessageUrl}`}>Send DM on Slack</a>
                  </div>
                )
              }
            </div>
          </div>
        </div>
      </div>
      <div class="border-b border-gray-200">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
          <div class="mx-auto max-w-2xl lg:max-w-none">
            <dl class="hidden lg:grid grid-cols-1 gap-0.5 overflow-hidden rounded-2xl text-center sm:grid-cols-3 lg:grid-cols-3">
              <div class="flex flex-col p-8">
                <dt class="text-sm font-semibold leading-6 text-gray-600"># owned services</dt>
                <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{ownedServicesList.length}</dd>
              </div>
              <div class="flex flex-col p-8">
                <dt class="text-sm font-semibold leading-6 text-gray-600"># owned messages</dt>
                <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{ownedMessageList.length}</dd>
              </div>
              <!-- <div class="flex flex-col  p-8">
                <dt class="text-sm font-semibold leading-6 text-gray-600"># owned domains</dt>
                <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">2</dd>
              </div> -->
              <div class="flex flex-col p-8">
                <dt class="text-sm font-semibold leading-6 text-gray-600"># teams joined</dt>
                <dd class="order-first text-3xl font-semibold tracking-tight text-gray-900">{associatedTeams.length}</dd>
              </div>
            </dl>
          </div>
        </div>
      </div>
      <div class="prose prose-md py-4 w-full">
        <Content components={components(props)} />
      </div>
    </main>
    <aside class="sticky top-20 h-[calc(100vh-theme(spacing.16))] w-56 overflow-y-auto">
      <div class="divide-y-2 divide-gray-100">
        <PillList
          color="pink"
          title={`Owned services (${ownedServicesList.length})`}
          pills={ownedServicesList}
          emptyMessage={`${props.data.name} does not own any services .`}
          client:load
        />
        <PillList
          color="orange"
          title={`Owned messages (${ownedMessageList.length})`}
          pills={ownedMessageList}
          emptyMessage={`${props.data.name} does not own any messages .`}
          client:load
        />
        <OwnersList
          title={`Member of team (${associatedTeams.length})`}
          owners={associatedTeams}
          emptyMessage={`${props.data.name} is not part of any documented team.`}
          client:load
        />
      </div>
    </aside>
  </div>
</DocsLayout>

<style>
  .docs-layout .prose {
    max-width: none;
  }
</style>
