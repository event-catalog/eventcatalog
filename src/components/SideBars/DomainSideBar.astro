---
import OwnersList from '@components/Lists/OwnersList';
import PillList from '@components/Lists/PillList';
import VersionList from '@components/Lists/VersionList.astro';
import { getEntry, type CollectionEntry } from 'astro:content';
interface Props {
  domain: CollectionEntry<'domains'>;
}

const { domain } = Astro.props;

// @ts-ignore
const services = domain.data.services as CollectionEntry<'services'>[] || [];

const ownersRaw = domain.data?.owners || [];
const owners = await Promise.all(ownersRaw.map((o) => getEntry(o)));

const serviceList = services.map((p) => ({
  label: p.data.id,
  badge: p.collection,
  tag: `v${p.data.version}`,
  href: `/docs/${p.collection}/${p.data.id}/${p.data.version}`,
}));

const ownersList = owners.map((o) => ({
  label: o.data.name,
  type: o.collection,
  badge: o.collection === 'users' ? o.data.role : 'Team',
  avatarUrl: o.collection === 'users' ? o.data.avatarUrl : '',
  href: `/docs/${o.collection}/${o.data.id}`,
}));

---

<aside class="sticky top-28 left-0 space-y-8 h-full overflow-y-auto">
  <div>
    <PillList title={`Services (${services.length})`} pills={serviceList} emptyMessage={`This domain does not contain any services.`} color="pink" client:load />
    <OwnersList title={`Service owners (${ownersList.length})`} owners={ownersList} emptyMessage={`This domain does not have any documented owners.`} client:load />
    {domain.data.versions && <VersionList versions={domain.data.versions} collectionItem={domain} />}
    <a href={`/visualiser/${domain.collection}/${domain.data.id}/${domain.data.version}`} class="block text-center rounded-md w-full bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-100/60 hover:text-purple-500">View in Visualiser</a>
  </div>
</aside>
