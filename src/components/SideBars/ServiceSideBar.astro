---
import OwnersList from '@components/Lists/OwnersList';
import PillList from '@components/Lists/PillList';
import VersionList from '@components/Lists/VersionList.astro';
import { getEntry, type CollectionEntry } from 'astro:content';
import { join } from 'node:path'
interface Props {
  service: CollectionEntry<'services'>;
}

const { service } = Astro.props;

// @ts-ignore
const sends = service.data.sends as CollectionEntry<'events'>[] || [];
// @ts-ignore
const receives = service.data.receives as CollectionEntry<'events'>[] || [];

const ownersRaw = service.data?.owners || [];
const owners = await Promise.all(ownersRaw.map((o) => getEntry(o)));

const sendsList = sends.map((p) => ({
  label: p.data.name,
  badge: p.collection,
  color: p.collection === 'events' ? 'orange' : 'blue',
  tag: `v${p.data.version}`,
  href: `/docs/${p.collection}/${p.data.id}/${p.data.version}`,
}));
const receivesList = receives.map((p) => ({
  label: p.data.name,
  badge: p.collection,
  color: p.collection === 'events' ? 'orange' : 'blue',
  tag: `v${p.data.version}`,
  href: `/docs/${p.collection}/${p.data.id}/${p.data.version}`,
}));

const ownersList = owners.map((o) => ({
  label: o.data.name,
  type: o.collection,
  badge: o.collection === 'users' ? o.data.role : 'Team',
  avatarUrl: o.collection === 'users' ? o.data.avatarUrl : '',
  href: `/docs/${o.collection}/${o.data.id}`,
}));

// @ts-ignore
const publicPath = service?.catalog?.publicPath;
const schemaFilePath = service?.data?.schemaPath;
const schemaURL = join(publicPath, schemaFilePath || '')


---

<aside class="sticky top-28 left-0 space-y-8 h-full overflow-y-auto">
  <div id="sidebar-cta-portal">
    <PillList title={`Receives Messages (${receivesList.length})`} pills={receivesList} emptyMessage={`This service does not receive any messages.`} color="orange" client:load />
    <PillList title={`Sends Messages (${sendsList.length})`} pills={sendsList} emptyMessage={`This service does not send any messages.`} color="orange" client:load />
    <OwnersList title={`Service owners (${ownersList.length})`} owners={ownersList} emptyMessage={`This service does not have any documented owners.`} client:load />

    {service.data.versions && <VersionList versions={service.data.versions} collectionItem={service} />}

    <div class="space-y-2">
      {
        service?.data?.schemaPath && (
          <a
            href={schemaURL}
            download={`${service.data.name}(${service.data.version})-${schemaFilePath}`}
            class="hidden w-full md:inline-flex h-10 justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-200 bg-gray-800 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900"
          >
            <>
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="-ml-1 mr-2 h-5 w-5 text-gray-200">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
              </svg>
              <span>Download Schema</span>
            </>
          </a>
        )
      }
      <a href={`/visualiser/${service.collection}/${service.data.id}/${service.data.version}`} class="block text-center rounded-md w-full bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-100/60 hover:text-purple-500">View in Visualiser</a>
      <a id="open-api-button" href={`/docs/${service.collection}/${service.data.id}/${service.data.version}/spec`} class="hidden text-center rounded-md w-full bg-white px-3.5 py-2.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-100/60 hover:text-purple-500">View API spec</a>
    </div>
  </div>
</aside>

<script>
  // If openapi-component is in the dom then show the button, when dom has loaded
  document.addEventListener('DOMContentLoaded', () => {
    const openApiComponent = document.getElementById('openapi-component');
    const openApiButton = document.getElementById('open-api-button');
    if (openApiComponent && openApiButton) {
      openApiButton.style.display = 'block';
    }
  });

</script>
